rm7 <- broom::tidy(m7) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like|video_type"))%>%
mutate(model = "国家的统领能力")
rm8 <- broom::tidy(m8) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like|video_type"))%>%
mutate(model = "国家的再分配能力")
{
dwplot(rbind(rm1, rm2, rm3, rm4, rm5, rm6, rm7, rm8),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times', hjust = 0.5), )
}
names_coef <- c(
"same_Handon" = "实践内容（课程思政）",
"same_newswire" = "宣传内容（思政课程）",
"`presentation_teacher&slides`" = "教师呈现与演示文稿"
)
m9 <- lm(SA ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like, data = data)
m10 <- glm(direct_Government_satisfaction ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like, family = quasipoisson(link = "log"), data = data)
m11 <- glm(direct_Government_trust ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like, family = quasipoisson(link = "log"), data = data)
m12 <- glm(like_civics ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like, family = quasipoisson(link = "log"), data = data)
rm9 <- broom::tidy(m9) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "国家能力综合感知")
rm10 <- broom::tidy(m10) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "中央政府施政满意度")
rm11 <- broom::tidy(m11) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "中央政府信任")
rm12 <- broom::tidy(m12) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "课程喜好")
{
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'), )
}
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'), )
}
ggsave("../figures/figure4.png", plot_DoEs, width = 8, height = 4.5)
names_coef <- c(
"same_Handon" = "实践内容（课程思政）",
"same_newswire" = "宣传内容（思政课程）",
"`presentation_teacher&slides`" = "教师呈现与演示文稿",
"DiaDist" = "方言距离",
"dialect_ability" = "方言能力"
)
m9 <- lm(SA ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like + DiaDist + dialect_ability, data = data)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
if (!require(pacman)) install.packages("pacman")
library(pacman)
p_load(misreport,
dotwhisker,
modelsummary,
# Visualization
lubridate,
# Applied
broom,
knitr,
# dependency
scales,
tidyverse,
drhutools,
# data save & data read
ggplot2,
gridExtra,
qs,
png,
kableExtra,
psych,
MASS,
list,
redinglib)
set.seed(19970921)
# Theme setup
theme_set(theme_minimal())
# Data input
data <- qread("../data/new_paperdata.qs")
names_coef <- c(
"same_Handon" = "实践内容（课程思政）",
"same_newswire" = "宣传内容（思政课程）",
"`presentation_teacher&slides`" = "教师呈现与演示文稿",
"DiaDist" = "方言距离",
"dialect_ability" = "方言能力"
)
m9 <- lm(SA ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like + DiaDist + dialect_ability, data = data)
m10 <- glm(direct_Government_satisfaction ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like + DiaDist + dialect_ability, family = quasipoisson(link = "log"), data = data)
m11 <- glm(direct_Government_trust ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like + DiaDist + dialect_ability, family = quasipoisson(link = "log"), data = data)
m12 <- glm(like_civics ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like + DiaDist + dialect_ability, family = quasipoisson(link = "log"), data = data)
rm9 <- broom::tidy(m9) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "国家能力综合感知")
rm10 <- broom::tidy(m10) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "中央政府施政满意度")
rm11 <- broom::tidy(m11) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "中央政府信任")
rm12 <- broom::tidy(m12) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "课程喜好")
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'), )
}
ggsave("../figures/new_figure4.png", plot_DoEs, width = 8, height = 4.5)
{
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'), )
}
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'), )
}
ggsave("../figures/new_figure4.png", plot_DoEs, width = 8, height = 4.5)
{
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', colour = "black"), axis.title.x = element_text(family='Times'), )
}
ggsave("../figures/new_figure4.png", plot_DoEs, width = 8, height = 4.5)
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
{
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave("../figures/new_figure4.png", plot_DoEs, width = 8, height = 4.5)
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'), axis.title.x = element_text(family='SimSun'))
}
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'), axis.title.y = element_text(family='SimSun'))
}
ggsave("../figures/new_figure4.png", plot_DoEs, width = 8, height = 4.5)
knitr::include_graphics("../figures/figure4.png")
{
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave("../figures/new_figure4.png", width = 8, height = 4.5)
knitr::include_graphics("../figures/new_figure4.png")
font_add("SimSun","/Users/sunyufei/Library/Fonts/SimSun.ttf")
install.packages("showtext")
install.packages("cairo")
install.packages("Cairo")
library(showtext)
library(Cairo)
showtext_auto(enable=T)
font_add("SimSun","/Users/sunyufei/Library/Fonts/SimSun.ttf")
ggsave("../figures/new_figure4.png", plot_DoEs,device=cairo_pdf , width = 8, height = 4.5)
knitr::include_graphics("../figures/figure4.png")
ggsave("../figures/new_figure4.png", plot_DoEs, width = 8, height = 4.5)
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave("../figures/new_figure4.png", plot_DoEs, width = 8, height = 4.5)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
if (!require(pacman)) install.packages("pacman")
library(pacman)
p_load(misreport,
dotwhisker,
modelsummary,
# Visualization
lubridate,
# Applied
broom,
knitr,
# dependency
scales,
tidyverse,
drhutools,
# data save & data read
ggplot2,
gridExtra,
qs,
png,
kableExtra,
psych,
MASS,
list,
redinglib)
set.seed(19970921)
# Theme setup
theme_set(theme_minimal())
# Data input
data <- qread("../data/new_paperdata.qs")
names_coef <- c(
"same_Handon" = "实践内容（课程思政）",
"same_newswire" = "宣传内容（思政课程）",
"`presentation_teacher&slides`" = "教师呈现与演示文稿",
"DiaDist" = "方言距离",
"dialect_ability" = "方言能力"
)
m9 <- lm(SA ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like + DiaDist + dialect_ability, data = data)
m10 <- glm(direct_Government_satisfaction ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like + DiaDist + dialect_ability, family = quasipoisson(link = "log"), data = data)
m11 <- glm(direct_Government_trust ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like + DiaDist + dialect_ability, family = quasipoisson(link = "log"), data = data)
m12 <- glm(like_civics ~ same_Handon + same_newswire + `presentation_teacher&slides` + num_civics + gender + political_status + major + grade + GPA + YoB + university_like + DiaDist + dialect_ability, family = quasipoisson(link = "log"), data = data)
rm9 <- broom::tidy(m9) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "国家能力综合感知")
rm10 <- broom::tidy(m10) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "中央政府施政满意度")
rm11 <- broom::tidy(m11) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "中央政府信任")
rm12 <- broom::tidy(m12) %>%
filter(!str_detect(term, "num_civics|gender|political_status|major|grade|GPA|YoB|university_like"))%>%
mutate(model = "课程喜好")
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave("../figures/new_figure4.png", plot_DoEs, width = 8, height = 4.5)
{
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
?ggsave
ggsave("../figures/new_figure4.png", plot_DoEs, device = png, width = 8, height = 4.5)
knitr::include_graphics("../figures/figure4.png")
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave("../figures/new_figure4.png", plot_DoEs, device = png, width = 8, height = 4.5)
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave("../figures/new_figure4.png", plot_DoEs, device = png)
knitr::include_graphics("../figures/figure4.png")
ggsave("../figures/new_figure4.png", plot_DoEs, device = png, width = 8, height = 4.5)
knitr::include_graphics("../figures/figure4.png")
{
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave("../figures/new_figure4.png", plot_DoEs, width = 8, height = 4.5)
ggsave("../figures/new_figure4.png", plot_DoEs, device = cairo_pdf, width = 8, height = 4.5)
knitr::include_graphics("../figures/figure4.png")
ggsave("../figures/new_figure4.png", plot_DoEs, device = cairo_pdf, width = 8, height = 4.5)
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave("../figures/new_figure4.png", plot_DoEs, device = cairo_pdf, width = 8, height = 4.5)
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave("../figures/new_figure4.png", plot_DoEs, width = 8, height = 4.5)
ggsave("../figures/new_figure4.png", plot_DoEs, type = "cairo", width = 8, height = 4.5)
library(extrafont)
install.packages("extrafont")
library(extrafont)
ggsave("../figures/new_figure4.png", plot_DoEs, type = "cairo", width = 8, height = 4.5)
{
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave("../figures/new_figure4.png", plot_DoEs, device = cairo_pdf, width = 8, height = 4.5)
ggsave("../figures/new_figure4.png")
knitr::include_graphics("../figures/figure4.png")
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
{
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave(plot_DoEs, "../figures/new_figure4.png", width = 8, height = 4.5)
plot_DoEs <- {
dwplot(rbind(rm9, rm10, rm11, rm12),
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2
)) %>%
relabel_predictors(names_coef) +
theme_bw() +
xlab("Coefficient Estimate") +
scale_color_gb(reverse = TRUE) +
theme(text = element_text(family='SimSun', face = "bold", colour = "black"), axis.title.x = element_text(family='Times'))
}
ggsave(plot_DoEs, "../figures/new_figure4.png", width = 8, height = 4.5)
?ggsave
R.Version()
